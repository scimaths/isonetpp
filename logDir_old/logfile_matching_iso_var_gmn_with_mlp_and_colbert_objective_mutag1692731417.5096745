Command line
/mnt/home/ashwinr/btp24/grph/ISONET/subgraph/iso_matching_models.py
--TASK=matching_iso_var_gmn_with_mlp_and_colbert_objective
--MARGIN=0.5
--transform_dim=16
--FEAT_TYPE=One
--DATASET_NAME=mutag
--SEED=0
encoder= {'node_hidden_sizes': [10], 'node_feature_dim': 1, 'edge_hidden_sizes': None, 'edge_feature_dim': 1}
aggregator= {'node_hidden_sizes': [10], 'graph_transform_sizes': [10], 'input_size': [10], 'gated': True, 'aggregation_type': 'sum'}
graph_embedding_net= {'node_state_dim': 10, 'edge_hidden_sizes': [20], 'node_hidden_sizes': [10], 'n_prop_layers': 5, 'share_prop_params': True, 'edge_net_init_scale': 0.1, 'node_update_type': 'gru', 'use_reverse_direction': True, 'reverse_dir_param_different': False, 'layer_norm': False, 'prop_type': 'embedding'}
graph_matching_net= {'node_state_dim': 10, 'edge_hidden_sizes': [20], 'node_hidden_sizes': [10], 'n_prop_layers': 5, 'share_prop_params': True, 'edge_net_init_scale': 0.1, 'node_update_type': 'gru', 'use_reverse_direction': True, 'reverse_dir_param_different': False, 'layer_norm': False, 'prop_type': 'matching', 'similarity': 'dotproduct'}
model_type= embedding
data= {'problem': 'graph_edit_distance', 'dataset_params': {'n_nodes_range': [20, 20], 'p_edge_range': [0.2, 0.2], 'n_changes_positive': 1, 'n_changes_negative': 2, 'validation_dataset_size': 1000}}
training= {'batch_size': 128, 'learning_rate': 0.0001, 'mode': 'pair', 'loss': 'margin', 'margin': 0.5, 'graph_vec_regularizer_weight': 1e-06, 'clip_value': 10.0, 'n_training_steps': 500000, 'print_after': 100, 'eval_after': 10}
evaluation= {'batch_size': 128}
seed= 0
graphsim= {'conv_kernel_size': [10, 4, 2], 'linear_size': [24, 16], 'gcn_size': [10, 10, 10], 'conv_pool_size': [3, 3, 2], 'conv_out_channels': [2, 4, 8], 'dropout': 0}
loading train query graphs from ./Datasets/splits/train/train_mutag80k_query_subgraphs.pkl
loading train relationships from ./Datasets/splits/train/train_mutag80k_rel_nx_is_subgraph_iso.pkl
loading corpus graphs from ./Datasets/splits/mutag80k_corpus_subgraphs.pkl
loading val query graphs from ./Datasets/splits/val/val_mutag80k_query_subgraphs.pkl
loading val relationships from ./Datasets/splits/val/val_mutag80k_rel_nx_is_subgraph_iso.pkl
loading corpus graphs from ./Datasets/splits/mutag80k_corpus_subgraphs.pkl
Loading model GMN_with_MLP_and_ColBERT_scores
This uses GMN encoder to obtain set of node embeddings per graph processed with a gated MLP, then subjects that to ColBERT loss
saving initial model to ./initialModels/matching_iso_var_gmn_with_mlp_and_colbert_objective_mutag_0
no. of params in model: 1640
Run: 0 train loss: 127.893593 Time: 10.40
Run: 0 VAL ap_score: 0.504932 map_score: 0.602225 Time: 2.89
saving best validated model to ./bestValidationModels/matching_iso_var_gmn_with_mlp_and_colbert_objective_mutag_0
Run: 1 train loss: 87.077557 Time: 9.60
Run: 1 VAL ap_score: 0.522395 map_score: 0.600598 Time: 3.59
Run: 2 train loss: 75.266051 Time: 9.96
Run: 2 VAL ap_score: 0.528905 map_score: 0.616104 Time: 3.57
saving best validated model to ./bestValidationModels/matching_iso_var_gmn_with_mlp_and_colbert_objective_mutag_0
Run: 3 train loss: 69.463515 Time: 10.07
Run: 3 VAL ap_score: 0.550139 map_score: 0.633027 Time: 2.84
saving best validated model to ./bestValidationModels/matching_iso_var_gmn_with_mlp_and_colbert_objective_mutag_0
